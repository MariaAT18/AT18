apply plugin: 'java'
apply plugin: 'checkstyle'

repositories {
    mavenCentral()  
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

checkstyle {
    checkstyleMain.source = "src/main/"
    checkstyleMain.excludes = ["**/src/test/**"]
}

checkstyleMain {
    source = 'src/main/java'
}

test.finalizedBy("checkstyleMain")

task runHelloWorldJoseG (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.helloworld.joseg.Main'
    classpath = sourceSets.main.runtimeClasspath
}

task runHighestLowestRodrigov (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.highestlowest.rodrigov.Main' // Example: 'jalau.at18.katas.highestlowest.Main'
    classpath = sourceSets.main.runtimeClasspath
}

task runMultiplesRodrigov(dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.multiples.rodrigov.Main'
    classpath = sourceSets.main.runtimeClasspath
}
task runPhonenumberRodrigov (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.phonenumber.rodrigov.Main'
    classpath = sourceSets.main.runtimeClasspath
}
task runLikesRodrigov (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.likes.rodrigov.Main'
    classpath = sourceSets.main.runtimeClasspath
}

task runferHighlow (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.highestlowest.fernanda.Main'
    standardInput=System.in
    classpath = sourceSets.main.runtimeClasspath
}
task runferLikes (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.likes.fernanda.Main'
    standardInput=System.in 
    classpath = sourceSets.main.runtimeClasspath
}

task runfermultiples (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.multiples.fernanda.Main'
    standardInput=System.in
    classpath = sourceSets.main.runtimeClasspath
}
task runferphone (dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.phonenumber.fernanda.Main'
    standardInput=System.in
    classpath = sourceSets.main.runtimeClasspath
}
